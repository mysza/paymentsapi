swagger: '2.0'
info:
    description: 'This is a sample Payments API, that allows basic CRUD operations on a payment resource'
    version: '1.0.0'
    title: 'Payments API'
    contact:
        email: 'michal.michalowski@gmail.com'
    license:
        name: 'MIT'
        url: 'https://opensource.org/licenses/MIT'
host: 'payments.example.com'
basePath: '/'
tags:
    - name: 'payment'
      description: 'Payment'
schemes:
    - 'https'
paths:
    /payments:
        get:
            tags:
                - 'payment'
            summary: 'Get all payments'
            description: ''
            operationId: 'getAllPayments'
            produces:
                - 'application/json'
            parameters:
                - in: 'query'
                  name: 'page'
                  description: 'The results page to fetch'
                  required: false
                  type: 'integer'
                  default: 1
                - in: 'query'
                  name: 'limit'
                  description: 'Number of payments per page; 0 means no limit'
                  required: false
                  type: 'integer'
                  default: 0
            responses:
                200:
                    description: 'successful operation'
                    schema:
                        type: 'array'
                        items:
                            $ref: '#/definitions/Payment'
        post:
            tags:
                - 'payment'
            summary: 'Add a new payment'
            description: ''
            operationId: 'addPayment'
            consumes:
                - 'application/json'
            produces:
                - 'application/json'
            parameters:
                - in: 'body'
                  name: 'body'
                  description: 'Payment object that should be added to the collection'
                  required: true
                  schema:
                      $ref: '#/definitions/Payment'
            responses:
                200:
                    description: 'Successfuly added payment'
                    schema:
                        $ref: '#/definitions/Payment'
        put:
            tags:
                - 'payment'
            summary: 'Update an existing payment'
            description: ''
            operationId: 'updatePayment'
            consumes:
                - 'application/json'
            produces:
                - 'application/json'
            parameters:
                - in: 'body'
                  name: 'body'
                  description: 'Payment object that should be updated'
                  required: true
                  schema:
                      $ref: '#/definitions/Payment'
            responses:
                200:
                    description: 'Successfuly updated the payment'
                    schema:
                        $ref: '#/definitions/Payment'
    /payments/{paymentId}:
        get:
            tags:
                - 'payment'
            summary: 'Get payment by ID'
            description: ''
            operationId: 'getPaymentByID'
            produces:
                - 'application/json'
            parameters:
                - in: 'path'
                  name: 'paymentId'
                  type: 'string'
                  format: 'uuid'
                  required: true
                  description: 'The ID of the payment to fetch'
            responses:
                200:
                    description: 'Successfuly retrieved payment'
                    schema:
                        $ref: '#/definitions/Payment'
        delete:
            tags:
                - 'payment'
            summary: 'Deletes a payment'
            description: ''
            operationId: 'deletePayment'
            produces:
                - 'application/json'
            parameters:
                - in: 'path'
                  name: 'paymentId'
                  description: 'Payment ID to delete'
                  required: true
                  type: 'string'
                  format: 'uuid'
            responses:
                400:
                    description: 'Invalid ID supplied'
                404:
                    description: 'Pet not found'
definitions:
    Payment:
        type: 'object'
        properties:
            type:
                type: 'string'
                enum: ['Payment']
            id:
                type: 'string'
                format: 'uuid'
            version:
                type: 'integer'
            organisation_id:
                type: 'string'
                format: 'uuid'
            attributes:
                $ref: '#/definitions/PaymentAttributes'
        example:
            type: 'Payment'
            id: 'ab4bbd28-33c6-4231-9b64-0e96190f59ef'
            version: 0
            organisation_id: '743d5b63-8e6f-432e-a8fa-c5d8d2ee5fcb'
            attributes:
                amount: '100.21'
                beneficiary_party:
                    account_name: 'W Owens'
                    account_number: '31926819'
                    account_number_code: 'BBAN'
                    account_type: 0
                    address: '1 The Beneficiary Localtown SE2'
                    bank_id: '403000'
                    bank_id_code: 'GBDSC'
                    name: 'Wilfred Jeremiah Owens'
                charges_information:
                    bearer_code: 'SHAR'
                    sender_charges:
                        - amount: '5.00'
                          currency: 'GBP'
                        - amount: '10.00'
                          currency: 'USD'
                    receiver_charges_amount: '1.00'
                    receiver_charges_currency: 'USD'
                currency: 'GBP'
                debtor_party:
                    account_name: 'EJ Brown Black'
                    account_number: 'GB29XABC10161234567801'
                    account_number_code: 'IBAN'
                    address: '10 Debtor Crescent Sourcetown NE1'
                    bank_id: '203301'
                    bank_id_code: 'GBDSC'
                    name: 'Emelia Jane Brown'
                end_to_end_reference: 'Wil piano Jan'
                fx:
                    contract_reference: 'FX123'
                    exchange_rate: '2.00000'
                    original_amount: '200.42'
                    original_currency: 'USD'
                numeric_reference: '1002001'
                payment_id: '123456789012345678'
                payment_purpose: 'Paying for goods/services'
                payment_scheme: 'FPS'
                payment_type: 'Credit'
                processing_date: '2017-01-18'
                reference: "Payment for Em's piano lessons"
                scheme_payment_sub_type: 'InternetBanking'
                scheme_payment_type: 'ImmediatePayment'
                sponsor_party:
                    account_number: '56781234'
                    bank_id: '123123'
                    bank_id_code: 'GBDSC'
    PaymentAttributes:
        type: 'object'
        properties:
            amount:
                $ref: '#/definitions/Amount'
            beneficiary_party:
                $ref: '#/definitions/PartyFull'
            charges_information:
                $ref: '#/definitions/ChargesInformation'
            currency:
                $ref: '#/definitions/Currency'
            debtor_party:
                $ref: '#/definitions/PartyExtended'
            end_to_end_reference:
                type: 'string'
            fx:
                $ref: '#/definitions/FX'
            numeric_reference:
                type: 'string'
            payment_id:
                type: 'string'
            payment_purpose:
                type: 'string'
            payment_scheme:
                type: 'string'
            payment_type:
                type: 'string'
            processing_date:
                type: 'string'
                format: 'date'
            scheme_payment_sub_type:
                type: 'string'
            scheme_payment_type:
                type: 'string'
            reference:
                type: 'string'
    AccountNumberCode:
        type: 'string'
        enum: ['IBAN', 'BBAN']
    Currency:
        type: 'string'
        minLength: 3
        maxLength: 3
    Amount:
        type: 'string'
        pattern: '^(0|[1-9][0-9]*)\.[0-9]{2}$'
    Charge:
        type: 'object'
        properties:
            amount:
                $ref: '#/definitions/Amount'
            currency:
                $ref: '#/definitions/Currency'
    FX:
        type: 'object'
        properties:
            contract_reference:
                type: 'string'
            exchange_rate:
                type: 'string'
                pattern: '^(0|[1-9][0-9]*)\.[0-9]{5}$'
            original_amount:
                $ref: '#/definitions/Amount'
            original_currency:
                $ref: '#/definitions/Currency'
    ChargesInformation:
        type: 'object'
        properties:
            bearer_code:
                type: 'string'
            sender_charges:
                type: 'array'
                items:
                    $ref: '#/definitions/Charge'
            receiver_charges_amount:
                $ref: '#/definitions/Amount'
            receiver_charges_currency:
                $ref: '#/definitions/Currency'
    PartyBase:
        type: 'object'
        properties:
            account_number:
                type: 'string'
                maxLength: 34
                description: 'Assuming only IBAN or BBAN can be used'
            bank_id:
                type: 'string'
            bank_id_code:
                type: 'string'
    PartyExtended:
        allOf:
            - $ref: '#/definitions/PartyBase'
            - type: 'object'
              properties:
                  account_name:
                      type: 'string'
                      format: 'uuid'
                  account_number_code:
                      $ref: '#/definitions/AccountNumberCode'
                  address:
                      type: 'string'
                  name:
                      type: 'string'
    PartyFull:
        allOf:
            - $ref: '#/definitions/PartyExtended'
            - type: 'object'
              properties:
                  account_type:
                      type: 'integer'
                      format: 'int32'
                      minimum: 0
